import {
  SignIn,
  SignUp,
  SignInButton,
  SignUpButton,
  useUser,
  SignOutButton,
} from "@clerk/nextjs";
import { Recipe } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

import { api, RouterOutputs } from "~/utils/api";

// type Recipe = RouterOutputs["recipes"]["getAll"][number];
const RecipeCard = (props: { recipe: Recipe }) => {
  const { recipe } = props;
  return (
    <article key={recipe.id} className="grid grid-rows-2 w-52">
      <div className="row-span-2">
        <Image src={recipe.image!} alt="The recipe image" className="bg-cover rounded-t-md" width={208} height={260} />
      </div>
      <div className="bg-black text-slate-200 rounded-b-md p-2">
        <h3>{recipe.recipeName}</h3>
        <h4 className="text-xs text-teal-600">by {recipe.author}</h4>
      </div>
    </article>
  );
};

const Home: NextPage = () => {
  const { data: recipes } = api.recipes.getAll.useQuery();

  const user = useUser();
  return (
    <>
      <Head>
        <title>Con Sazon</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen flex-col justify-start px-3 py-2">
        <header className=" ">
          <nav className="flex flex-row justify-end gap-3 list-none">
            <li className="mr-auto">Con Sazon</li>
            {!user.isSignedIn && (
              <li>
                <SignInButton />
              </li>      
            )}
            {!user.isSignedIn && (
              <li>
                <SignUpButton />
              </li>    
            )}
            {!!user.isSignedIn && ( 
            <li>
              <SignOutButton />
            </li>
            )}
          </nav>
        </header>
        <div>
          <div className="flex justify-around flex-wrap gap-3 mt-4">
            {recipes && [...recipes, ...recipes]?.map((recipe) => (
              <RecipeCard recipe={recipe} />
            ))}
          </div>
        </div>
        <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
        <SignUp path="/sign-up" routing="path" signInUrl="/sign-in" />
      </main>
    </>
  );
};

export default Home;
